name: Deploy Website

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CEREBRAS_API_KEY: ${{ secrets.CEREBRAS_API_KEY }}

permissions:
  contents: write
  pages: write
  id-token: write
  issues: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Debug directory contents
        run: |
          pwd
          ls -la
          echo "Current directory:"
          ls -la .
          echo "Package lock file:"
          ls -la package-lock.json || echo "No package-lock.json found"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          git status
          ls -la package-lock.json || echo "No package-lock.json found after install"

      - name: Run linting
        run: |
          npm run lint
          npm run format:check || echo "Format check skipped"

      - name: Check for sensitive data
        uses: zricethezav/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml

      - name: Build project
        run: npm run build
        env:
          CEREBRAS_API_KEY: ${{ secrets.CEREBRAS_API_KEY }}

      - name: Run security audit
        run: npm audit || echo "Security audit completed with warnings"

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
          cname: lonemountainvistas.com
          force_orphan: true
          commit_message: "Deploy: ${{ github.sha }}"

      - name: Notify on Success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            if (context.issue.number) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '✅ Deployment successful! Site is live at https://lonemountainvistas.com'
              })
            }

      - name: Notify on Failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            if (context.issue.number) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '❌ Deployment failed. Please check the workflow logs for details.'
              })
            }

  security-scan:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run security scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Upload security scan results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: security-scan-results
          path: snyk-results.json 